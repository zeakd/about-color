{"version":3,"sources":["pixelAndResolution.js","rgb.js","main.js"],"names":["getColorIndicesForCoord","x","y","width","red","draw","canvas","img","resolWidth","resolHeight","height","ctx","getContext","drawImage","imgData","getImageData","wRatio","hRatio","w","h","count","allR","allG","allB","allA","i","Math","round","j","colorIndices","redIndex","greenIndex","blueIndex","alphaIndex","data","r","parseInt","g","b","a","putImageData","pixelAndResolution","resolutionCanvas","document","getElementById","widthInput","heightInput","value","addEventListener","e","hexToRgb","hex","result","exec","rgbToHex","toString","slice","console","log","fillStyle","fillRect","rgbCanvas","rInput","gInput","bInput","hexInput","Number","rgb","window","srcImage"],"mappings":"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","file":"main.90c6e917.map","sourceRoot":"../src","sourcesContent":["function getColorIndicesForCoord(x, y, width) {\n  var red = y * (width * 4) + x * 4;\n  return [red, red + 1, red + 2, red + 3];\n}\n\nfunction draw (canvas, img, resolWidth, resolHeight) {\n  const width = canvas.width;\n  const height = canvas.height;\n  const ctx = canvas.getContext('2d');\n\n  ctx.drawImage(img, 0,0, width, height);\n  const imgData = ctx.getImageData(0,0, width, height);\n\n  const wRatio = resolWidth / width;\n  const hRatio = resolHeight / height;\n  for (let w = 0; w < resolWidth; w++) {\n    for (let h = 0; h < resolHeight; h++) {\n      let count = 0;\n      let allR = 0;\n      let allG = 0;\n      let allB = 0;\n      let allA = 0;\n\n      for (let i = Math.round(w / wRatio); i < Math.round((w + 1) / wRatio); i++) {\n        for (let j = Math.round(h / hRatio); j < Math.round((h + 1) / hRatio); j++) {\n          const colorIndices = getColorIndicesForCoord(i, j, canvas.width)\n\n          const redIndex = colorIndices[0];\n          const greenIndex = colorIndices[1];\n          const blueIndex = colorIndices[2];\n          const alphaIndex = colorIndices[3];\n\n          allR = allR + imgData.data[redIndex]\n          allG = allG + imgData.data[greenIndex]\n          allB = allB + imgData.data[blueIndex]\n          allA = allA + imgData.data[alphaIndex]\n\n          count = count + 1;\n        }\n      }\n\n      const r = parseInt(allR / count);\n      const g = parseInt(allG / count);\n      const b = parseInt(allB / count);\n      const a = parseInt(allA / count);\n\n      for (let i = Math.round(w / wRatio); i < Math.round((w + 1) / wRatio); i++) {\n        for (let j = Math.round(h / hRatio); j < Math.round((h + 1) / hRatio); j++) {\n          const colorIndices = getColorIndicesForCoord(i, j, canvas.width)\n\n          const redIndex = colorIndices[0];\n          const greenIndex = colorIndices[1];\n          const blueIndex = colorIndices[2];\n          const alphaIndex = colorIndices[3];\n\n          imgData.data[redIndex] = r\n          imgData.data[greenIndex] = g\n          imgData.data[blueIndex] = b\n          imgData.data[alphaIndex] = a\n        }\n      }\n    }\n  }\n\n  ctx.putImageData(imgData, 0, 0);\n}\n\nconst pixelAndResolution = (img) => {\n  const resolutionCanvas = document.getElementById('resolution-canvas');\n  \n  const widthInput = document.getElementById('resolution-width');\n  const heightInput = document.getElementById('resolution-height');\n\n  draw(resolutionCanvas, img, widthInput.value, heightInput.value);\n\n  widthInput.addEventListener('input', function (e) {\n    const width = parseInt(widthInput.value);\n    const height = parseInt(width / 3 * 4);\n    heightInput.value = height;\n\n    draw(resolutionCanvas, img, width, height)\n  })\n\n  heightInput.addEventListener('input', function (e) {\n    const height = parseInt(heightInput.value);\n    const width = parseInt(height / 4 * 3);\n    widthInput.value = width;\n\n    draw(resolutionCanvas, img, width, height)\n  })\n\n  \n}\n\nexport default pixelAndResolution","function hexToRgb(hex) {\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16)\n  } : null;\n}\n\nfunction rgbToHex(r, g, b) {\n  return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n}\n\nfunction draw (canvas, hex) {\n  console.log(canvas.height)\n  const height = canvas.height;\n  const width = canvas.width;\n  const ctx = canvas.getContext('2d');\n  ctx.fillStyle = hex;\n  ctx.fillRect(0, 0, width, height);\n}\n\nexport default () => {\n  const rgbCanvas = document.getElementById('rgb-canvas')\n\n  const rInput = document.getElementById('r-input');\n  const gInput = document.getElementById('g-input');\n  const bInput = document.getElementById('b-input');\n  const hexInput = document.getElementById('hex-input');\n  \n  draw(rgbCanvas, rgbToHex(Number(rInput.value), Number(gInput.value), Number(bInput.value))) \n\n  rInput.addEventListener('input', function (e) {\n    const hex = rgbToHex(Number(rInput.value), Number(gInput.value), Number(bInput.value))\n    hexInput.value = hex;\n    draw(rgbCanvas, hex);\n  })\n\n  gInput.addEventListener('input', function (e) {\n    const hex = rgbToHex(Number(rInput.value), Number(gInput.value), Number(bInput.value))\n    hexInput.value = hex;\n    draw(rgbCanvas, hex);\n  })\n\n  bInput.addEventListener('input', function (e) {\n    const hex = rgbToHex(Number(rInput.value), Number(gInput.value), Number(bInput.value))\n    hexInput.value = hex;\n    draw(rgbCanvas, hex);\n  })\n\n  hexInput.addEventListener('input', function (e) {\n    const hex = hexInput.value;\n    const rgb = hexToRgb(hex);\n    rInput.value = rgb.r;\n    gInput.value = rgb.g;\n    bInput.value = rgb.b;\n\n    draw(rgbCanvas, hex);\n  })\n}","import pixelAndResolution from './pixelAndResolution'\nimport RGB from './rgb'\n\nwindow.addEventListener('load', () => {\n  const srcImage = document.getElementById('source-image')\n  pixelAndResolution(srcImage)\n  RGB();\n})"]}